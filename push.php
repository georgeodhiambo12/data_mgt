<?php
session_start();

// Check if the user is logged in, if not redirect to login page
if (!isset($_SESSION['admin_logged_in']) || $_SESSION['admin_logged_in'] !== true) {
    header("Location: login.php");
    exit;
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Upload and Dump</title>
    <link rel="stylesheet" href="style.css">
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <style>
        body {
            font-family: Arial, sans-serif;
            margin: 0;
            padding: 0;
            background-color: #f4f4f4;
        }
        .container {
            width: 80%;
            margin: auto;
            overflow: hidden;
        }
        header {
            background: #50b3a2;
            color: #ffffff;
            padding-top: 30px;
            min-height: 70px;
            border-bottom: #e8491d 3px solid;
        }
        header a {
            color: #ffffff;
            text-decoration: none;
            text-transform: uppercase;
            font-size: 16px;
        }
        header ul {
            padding: 0;
            list-style: none;
        }
        header li {
            float: left;
            display: inline;
            padding: 0 20px 0 20px;
        }
        header #branding {
            float: left;
        }
        header #branding h1 {
            margin: 0;
        }
        header nav {
            float: right;
            margin-top: 10px;
        }
        .showcase {
            min-height: 400px;
            background: url('showcase.jpg') no-repeat 0 -400px;
            text-align: center;
            color: #ffffff;
        }
        .showcase h1 {
            margin-top: 100px;
            font-size: 55px;
            margin-bottom: 10px;
        }
        .showcase p {
            font-size: 20px;
        }
        .form-container {
            background: #ffffff;
            padding: 30px;
            margin-top: 30px;
            box-shadow: 0 0 10px rgba(0,0,0,0.1);
        }
        h2 {
            color: #333333;
        }
        form {
            margin-top: 20px;
        }
        form input[type="file"], form input[type="submit"], form select, form button {
            display: block;
            width: 100%;
            padding: 10px;
            margin-bottom: 20px;
        }
        form input[type="submit"], form button {
            background-color: #50b3a2;
            color: white;
            border: none;
            cursor: pointer;
        }
        form input[type="submit"]:hover, form button:hover {
            background-color: #45a089;
        }
        canvas {
            width: 100% !important;
            height: auto !important;
        }
        footer {
            background: #50b3a2;
            color: white;
            text-align: center;
            padding: 10px 0;
            margin-top: 20px;
        }
    </style>
</head>
<body>
    <header>
        <div class="container">
            <div id="branding">
               <a href="https://tendersoko.co.ke/cpanel"><h1>Excel Data Dump</h1></a>
            </div>
            <nav>
                <ul>
                    <li><a href="index.php">GENERATE</a></li>
                    <li><a href="logout.php">Logout</a></li>
                </ul>
            </nav>
        </div>
    </header>
    <div class="container">
        <div class="form-container">
            <h2>Upload Excel Files</h2>
            <form action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>" method="post" enctype="multipart/form-data">
                <label for="files">Select Excel files to upload:</label>
                <input type="file" name="files[]" id="files" multiple>
                <input type="submit" value="Upload Files" name="submit">
            </form>
        </div>
    <?php

    // Database credentials
    $dbHost = 'localhost';
    $dbName = 'tenderso_data_mgt';
    $dbUsername = 'tenderso_george';
    $dbPassword = 'iVL?F1jO&.VP';

    // Establish database connection using PDO
        try {
            $pdo = new PDO("mysql:host=$dbHost;dbname=$dbName", $dbUsername, $dbPassword);
            // Set PDO error mode to exception
            $pdo->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
        } catch(PDOException $e) {
            echo "Connection failed: " . $e->getMessage();
        }

        // Including the autoload file generated by Composer
        require_once 'vendor/autoload.php';

        // Function to handle file upload and data processing
        function handleFileUpload() {
            // Check if files are uploaded
            if ($_SERVER["REQUEST_METHOD"] == "POST" && isset($_FILES["files"])) {
                $target_dir = "uploads/";

                // Creating the directory if it doesn't exist
                if (!file_exists($target_dir)) {
                    mkdir($target_dir, 0777, true);
                }

                // Loop through the uploaded files
                foreach($_FILES['files']['tmp_name'] as $key => $tmp_name ){
                    $file_name = $_FILES['files']['name'][$key];
                    $file_size = $_FILES['files']['size'][$key];
                    $file_tmp = $_FILES['files']['tmp_name'][$key];
                    $file_error = $_FILES['files']['error'][$key];

                    // Check if file is uploaded successfully
                    if ($file_error === UPLOAD_ERR_OK) {
                        $target_file = $target_dir . basename($file_name);
                        $fileType = strtolower(pathinfo($target_file, PATHINFO_EXTENSION));

                        // Check the file size and type
                        if ($file_size > 5000000 || !in_array($fileType, ["xlsx", "xls"])) {
                            echo "Sorry, only Excel files up to 5MB are allowed.";
                        } else {
                            if (move_uploaded_file($file_tmp, $target_file)) {
                                echo "The file " . htmlspecialchars(basename($file_name)) . " has been uploaded.";

                                // Convert the Excel file to CSV
                                $csvFile = $target_dir . pathinfo($file_name, PATHINFO_FILENAME) . ".csv";
                                convertExcelToCSV($target_file, $csvFile);

                                // Display the filter form
                                displayFilterForm($csvFile);
                            } else {
                                echo "Sorry, there was an error uploading your file.";
                            }
                        }
                    } else {
                        echo "File upload error: $file_error";
                    }
                }
            }
        }

        // Function to convert Excel file to CSV
        function convertExcelToCSV($excelFile, $csvFile) {
            $reader = \PhpOffice\PhpSpreadsheet\IOFactory::createReader("Xlsx");
            $spreadsheet = $reader->load($excelFile);

            // Set date format for output (assuming date is in column A)
            $spreadsheet->getActiveSheet()->getStyle('A')->getNumberFormat()->setFormatCode('dd-mm-yyyy');

            $writer = \PhpOffice\PhpSpreadsheet\IOFactory::createWriter($spreadsheet, 'Csv');
            $writer->save($csvFile);
        }

        // Function to display filter form
        function displayFilterForm($csvFile) {
            echo "<div class='form-container'>";
            echo "<h2>Filter Data:</h2>";
            echo "<form method='post' action='" . htmlspecialchars($_SERVER["PHP_SELF"]) . "'>";
            echo "<h3>Select Heading:</h3>";
            echo "<select name='heading[]' id='heading' multiple>";

            // Sample headings
            $headings = [
                'DATE_MID', 'YEAR', 'MONTH', 'DAY', 'AM/PM', 'QUARTER', 'PAYMENT_MODE', 'AMOUNT', 'SUB_PLAN',
                'WEEK', 'EMAIL_ADDRESS', 'OCCURRENCE', 'DUPLICATE', 'STATUS', 'FREQUENCY', 'RE_DATE', 'REG_DATE', 'REG_PAY_DIFF', 'SUB_PLAN_SHIFT', 'COUNTRY'
            ];

            // Display heading options
            foreach ($headings as $heading) {
                echo "<option value='$heading'>$heading</option>";
            }

            echo "</select>";

            // Add search inputs for each heading
            echo "<div id='search-fields'></div>";

            echo "<input type='hidden' name='csvFile' value='$csvFile'>";
            echo "<input type='submit' name='filter' value='Filter'>";
            echo "</form>";
            echo "</div>";
        }

        // Function to filter data by the selected headings and search values
        function filterData($csvFile, $selectedHeadings, $searchValues) {
            global $pdo;

            if (isset($_POST['filter']) && isset($_POST['heading'])) {
                $selectedHeadings = $_POST['heading'];
                $searchValues = isset($_POST['search']) ? $_POST['search'] : [];

                if (($handle = fopen($csvFile, "r")) !== FALSE) {
                    $header = fgetcsv($handle, 1000, ","); // Get the header row

                    // Prepare the SQL statement for checking duplicates
                    $checkSql = "SELECT COUNT(*) FROM tendersodata WHERE `DATE_MID` = ? AND `YEAR` = ? AND `MONTH` = ? AND `DAY` = ? AND `AM/PM` = ? AND `QUARTER` = ? AND `PAYMENT_MODE` = ? AND `AMOUNT` = ? AND `SUB_PLAN` = ? AND `WEEK` = ? AND `EMAIL_ADDRESS` = ? AND `OCCURRENCE` = ? AND `DUPLICATE` = ? AND `STATUS` = ? AND `FREQUENCY` = ? AND `RE_DATE` = ? AND `REG_DATE` = ? AND `REG_PAY_DIFF` = ? AND `SUB_PLAN_SHIFT` = ? AND `COUNTRY` = ?";
                    $checkStmt = $pdo->prepare($checkSql);

                    // Prepare the SQL statement for insertion
                    $sql = "INSERT INTO tendersodata (`DATE_MID`, `YEAR`, `MONTH`, `DAY`, `AM/PM`, `QUARTER`, `PAYMENT_MODE`, `AMOUNT`, `SUB_PLAN`, `WEEK`, `EMAIL_ADDRESS`, `OCCURRENCE`, `DUPLICATE`, `STATUS`, `FREQUENCY`, `RE_DATE`, `REG_DATE`, `REG_PAY_DIFF`, `SUB_PLAN_SHIFT`, `COUNTRY`)
                    VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)";
                    $stmt = $pdo->prepare($sql);

                    while (($data = fgetcsv($handle, 1000, ",")) !== FALSE) {
                        $matched = true;
                        foreach ($selectedHeadings as $index => $heading) {
                            $searchValue = !empty($searchValues[$heading]) ? $searchValues[$heading] : '';
                            $dataValue = isset($header[$index]) ? $data[$index] : null;

                            if ($dataValue !== null && $searchValue !== '' && stripos($dataValue, $searchValue) === false) {
                                $matched = false;
                                break;
                            }
                        }

                        if ($matched) {
                            // Extract year from the date string
                            $dateParts = explode('-', $data[0]); // Assuming date format is "DD-MM-YYYY"
                            $year = end($dateParts);

                            // Check for duplicate record
                            $checkStmt->execute([
                                $data[0], $year, $data[2], $data[3], $data[4], $data[5], $data[6], $data[7], $data[8], $data[9],
                                $data[10], $data[11], $data[12], $data[13], $data[14], $data[15], $data[16], $data[17], $data[18], $data[19]
                            ]);
                            $count = $checkStmt->fetchColumn();

                            if ($count == 0) {
                                // Insert record if no duplicate is found
                                $stmt->execute([
                                    $data[0], $year, $data[2], $data[3], $data[4], $data[5], $data[6], $data[7], $data[8], $data[9],
                                    $data[10], $data[11], $data[12], $data[13], $data[14], $data[15], $data[16], $data[17], $data[18], $data[19]
                                ]);
                            }
                        }
                    }
                    fclose($handle);
                } else {
                    echo "<p>Failed to open CSV file.</p>";
                }

                // Generate charts
                generateCharts($csvFile, $selectedHeadings[0]); // Passing only the first selected heading for chart generation
            }
        }

        // Function to generate charts
        function generateCharts($csvFile, $selectedHeading) {
            // Load CSV file into an array
            $data = array_map('str_getcsv', file($csvFile));

            // Extract data for the selected heading
            $selectedColumnIndex = array_search($selectedHeading, $data[0]);
            $selectedColumnData = array_column($data, $selectedColumnIndex);

            // Count occurrences of each unique value in the selected column
            $valueCounts = array_count_values($selectedColumnData);

            // Chart data
            $labels = array_keys($valueCounts);
            $counts = array_values($valueCounts);

            // Chart configuration
            $chartData = json_encode([
                'labels' => $labels,
                'datasets' => [
                    [
                        'label' => 'Frequency',
                        'data' => $counts,
                        'backgroundColor' => [
                            'rgba(255, 99, 132, 0.2)',
                            'rgba(54, 162, 235, 0.2)',
                            'rgba(255, 206, 86, 0.2)',
                            'rgba(75, 192, 192, 0.2)',
                            'rgba(153, 102, 255, 0.2)',
                        ],
                        'borderColor' => [
                            'rgba(255, 99, 132, 1)',
                            'rgba(54, 162, 235, 1)',
                            'rgba(255, 206, 86, 1)',
                            'rgba(75, 192, 192, 1)',
                            'rgba(153, 102, 255, 1)',
                        ],
                        'borderWidth' => 1,
                    ],
                ],
            ]);

            // Display the chart
            echo "<h2>Chart:</h2>";
            echo "<div style='width: 80%; margin: auto;'>";
            echo "<canvas id='myChart' width='800' height='400'></canvas>";
            echo "</div>";
            echo "<script>";
            echo "var ctx = document.getElementById('myChart').getContext('2d');";
            echo "var myChart = new Chart(ctx, {";
            echo "    type: 'bar',";
            echo "    data: $chartData,";
            echo "    options: {";
            echo "        responsive: true,"; // Make the chart responsive
            echo "        maintainAspectRatio: false,"; // Prevent the aspect ratio from being maintained
            echo "    }";
            echo "});";
            echo "</script>";
        }

        // Calling the function to handle file upload
        handleFileUpload();

        // Filtering the data based on the selected headings and search values
        if (isset($_POST['filter']) && isset($_POST['heading'])) {
            $csvFile = $_POST['csvFile'];
            filterData($csvFile, $_POST['heading'], isset($_POST['search']) ? $_POST['search'] : []);
        }

        // Display either the charts or the filtered Excel file based on the user's choice
        if (isset($_GET['view'])) {
            if ($_GET['view'] === 'charts') {
                // Display charts
                generateCharts($csvFile, 'DATE_MID'); // Pass a default heading for chart generation
            } elseif ($_GET['view'] === 'filtered') {
                // Display filtered Excel file
                header('Content-Type: application/csv');
                header('Content-Disposition: attachment; filename="filtered_data.csv"');
                readfile($csvFile);
                exit;
            }
        }
        ?>
    </div>
    <footer>
        &copy; TenderSoko, 2024. All rights reserved
    </footer>
</body>
</html>
